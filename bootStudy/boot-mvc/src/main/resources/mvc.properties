#异步请求处理
spring.mvc.async.request-timeout=
#是否应使用请求参数（默认为“format”）来确定请求的媒体类型。  (false)
spring.mvc.contentnegotiation.favor-parameter=true
#是否应使用URL路径中的路径扩展来确定请求的媒体类型。
spring.mvc.contentnegotiation.favor-path-extension=true  (false)
#映射内容协商的媒体类型的文件扩展名。例如，yml到text / yaml。
spring.mvc.contentnegotiation.media-types=
#启用“favor-parameter”时要使用的查询参数名称。
spring.mvc.contentnegotiation.parameter-name=
#要使用的日期格式。例如，`dd / MM / yyyy`
spring.mvc.date-format=
#是否将TRACE请求分派给FrameworkServlet doService方法   (false)
spring.mvc.dispatch-options-request=true
#＃是否将OPTIONS请求分派给FrameworkServlet doService方法    (true)
spring.mvc.dispatch-trace-request=true
#是否启用favicon.ico的解析  (true)
spring.mvc.favicon.enabled=true
#是否启用Spring的FormContentFilter  (true)
spring.mvc.formcontent.putfilter.enabled=true
#是否启用Spring的HiddenHttpMethodFilter  (true)
spring.mvc.ignore-default-model-on-redirect=true
#＃要使用的语言环境。默认情况下，“Accept-Language”标头会覆盖此区域设置。
spring.mvc.locale=ar
＃定义应如何解析语言环境。
spring.mvc.locale-resolver=accept_header
＃是否启用由“HandlerExceptionResolver”解析的异常的警告日志记录，“DefaultHandlerExceptionResolver”除外。(false)
spring.mvc.log-resolved-exception=true
＃格式化消息代码的策略。例如，`PREFIX_ERROR_CODE`。
spring.mvc.message-codes-resolver-format=postfix_error_code
＃后缀模式匹配是否仅适用于使用“spring.mvc.contentnegotiation.media-types。*”注册的扩展。 (false)
spring.mvc.pathmatch.use-registered-suffix-pattern=true
＃将模式与请求匹配时是否使用后缀模式匹配（“。*”）。 (false)
spring.mvc.pathmatch.use-suffix-pattern=true
＃加载调度程序servlet的启动优先级。 (-1)
spring.mvc.servlet.load-on-startup=
＃用于静态资源的路径模式 （/**）
spring.mvc.static-path-pattern=
＃如果没有找到Handler来处理请求，是否应该抛出“NoHandlerFoundException”。
spring.mvc.throw-exception-if-no-handler-found=true
#MVC视图前缀
spring.mvc.view.prefix=
#MVC视图后缀
spring.mvc.view.suffix=